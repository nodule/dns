{
  "name": "dns",
  "description": "DNS components for ChiÏ‡",
  "version": "0.0.3",
  "licences": [
    {
      "type": "MIT",
      "url": "https://github.com/psichi/chix/raw/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/psichi/chix-dns.git"
  },
  "nodes": [
    {
      "ports": {
        "input": {
          "domain": {
            "type": "string",
            "format": "host",
            "title": "Domain",
            "description": "e.g. 'google.com'"
          },
          "family": {
            "enum": [
              4,
              6
            ],
            "title": "Family",
            "description": "The family can be the integer 4 or 6. Defaults to null that indicates both Ip v4 and v6 address family.",
            "default": null,
            "required": false
          }
        },
        "output": {
          "err": {
            "$ref": "../../schema.json#/err"
          },
          "address": {
            "type": "string",
            "format": [
              "ipv4",
              "ipv6"
            ],
            "title": "Address",
            "description": "The address is a string representation of a IP v4 or v6 address"
          },
          "family": {
            "enum": [
              4,
              6
            ],
            "title": "Family",
            "description": "Denotes the family of the address"
          }
        }
      },
      "require": {
        "dns": "latest"
      },
      "description": "Resolves a domain (e.g. 'google.com') into the first found A (IPv4) or AAAA (IPv6) record.",
      "name": "lookup",
      "ns": "dns",
      "fn": "output = [dns, 'lookup', input.domain, input.family]\n"
    },
    {
      "ports": {
        "input": {
          "domain": {
            "type": "string",
            "format": "host",
            "title": "Domain"
          },
          "rrtype": {
            "enum": [
              "A",
              "AAAA",
              "CNAME",
              "MX",
              "NS",
              "PTR",
              "SRV",
              "TXT"
            ],
            "title": "Resource Record Type",
            "description": "DNS record types stored in the zone files of the Domain Name System (DNS)"
          }
        },
        "output": {
          "err": {
            "$ref": "../../schema.json#/err"
          }
        }
      },
      "require": {
        "dns": "latest"
      },
      "description": "Resolves a domain (e.g. 'google.com') into an array of the record types specified by rrtype.",
      "name": "resolve",
      "ns": "dns",
      "fn": "output = [dns, 'resolve', input.domain, input.rrtype]\n"
    },
    {
      "ports": {
        "input": {
          "domain": {
            "type": "string",
            "format": "host",
            "title": "Domain"
          },
          "rrtype": {
            "enum": [
              "A",
              "AAAA",
              "CNAME",
              "MX",
              "NS",
              "PTR",
              "SRV",
              "TXT"
            ],
            "title": "Resource Record Type",
            "description": "DNS record types stored in the zone files of the Domain Name System (DNS)"
          }
        },
        "output": {
          "results": {
            "type": "object"
          }
        }
      },
      "require": {
        "dns": "latest"
      },
      "description": "Resolves a domain (e.g. 'google.com') into an array of the record types specified by rrtype.",
      "name": "resolve4",
      "ns": "dns",
      "fn": "output = [dns, 'resolve4', input.domain]\n"
    },
    {
      "ports": {
        "input": {
          "domain": {
            "type": "string"
          }
        },
        "output": {
          "results": {
            "type": "object"
          }
        }
      },
      "require": {
        "dns": "latest"
      },
      "description": "dns resolve6",
      "name": "resolve6",
      "ns": "dns",
      "fn": "output = [dns, 'resolve6', input.domain]\n"
    },
    {
      "ports": {
        "input": {
          "domain": {
            "type": "string"
          }
        },
        "output": {
          "results": {
            "type": "object"
          }
        }
      },
      "require": {
        "dns": "latest"
      },
      "description": "dns resolveCname",
      "name": "resolveCname",
      "ns": "dns",
      "fn": "output = [dns, 'resolveCname', input.domain]\n"
    },
    {
      "ports": {
        "input": {
          "domain": {
            "type": "string"
          }
        },
        "output": {
          "results": {
            "type": "object"
          }
        }
      },
      "require": {
        "dns": "latest"
      },
      "description": "dns resolveMx",
      "name": "resolveMx",
      "ns": "dns",
      "fn": "output = [dns, 'resolveMx', input.domain]\n"
    },
    {
      "ports": {
        "input": {
          "domain": {
            "type": "string"
          }
        },
        "output": {
          "results": {
            "type": "object"
          }
        }
      },
      "require": {
        "dns": "latest"
      },
      "description": "dns resolveNs",
      "name": "resolveNs",
      "ns": "dns",
      "fn": "output = [dns, 'resolveNs', input.domain]\n"
    },
    {
      "ports": {
        "input": {
          "domain": {
            "type": "string"
          }
        },
        "output": {
          "results": {
            "type": "object"
          }
        }
      },
      "require": {
        "dns": "latest"
      },
      "description": "dns resolveSrv",
      "name": "resolveSrv",
      "ns": "dns",
      "fn": "output = [dns, 'resolveSrv', input.domain]\n"
    },
    {
      "ports": {
        "input": {
          "domain": {
            "type": "string"
          }
        },
        "output": {
          "results": {
            "type": "object"
          }
        }
      },
      "require": {
        "dns": "latest"
      },
      "description": "dns resolveTxt",
      "name": "resolveTxt",
      "ns": "dns",
      "fn": "output = [dns, 'resolveTxt', input.domain]\n"
    },
    {
      "ports": {
        "input": {
          "ip": {
            "type": "string"
          }
        },
        "output": {
          "results": {
            "type": "object"
          }
        }
      },
      "require": {
        "dns": "latest"
      },
      "description": "dns reverse",
      "name": "reverse",
      "ns": "dns",
      "fn": "output = [dns, 'reverse', input.ip]\n"
    }
  ],
  "twigs": []
}